trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self

- script: |
    python3 -m py_compile hello.py
  displayName: 'Compilar Aplicación'

- script: |
    pytest tests/
  displayName: 'Ejecutar Pruebas Unitarias'

- task: SonarQubePrepare@4
  inputs:
    SonarQube: 'SonarQubeServiceConnection'
    scannerMode: 'CLI'
    configMode: 'file'
    configFile: 'sonar-project.properties'
  displayName: 'Análisis de Código Estático'

- script: |
    dependency-check.sh --project "tu-proyecto" --scan .
  displayName: 'Análisis de Vulnerabilidades'

- task: Docker@2
  inputs:
    command: 'buildAndPush'
    repository: 'dunkelheitdll/hello-world-app'
    Dockerfile: '**/Dockerfile'
    containerRegistry: 'DockerHub'
    tags: |
      $(Build.BuildId)
  displayName: 'Construir y Publicar Imagen Docker'

- script: |
    kubectl apply -f k8s/deployment.yaml
  displayName: 'Despliegue en Kubernetes'
